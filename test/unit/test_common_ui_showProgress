#!/bin/bash

#
# Copyright Â© 2013 Max Ruman
#
# This file is part of Wok.
#
# Wok is free software: you can redistribute it and/or modify it under
# the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
#
# Wok is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
# License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with Wok. If not, see <http://www.gnu.org/licenses/>.
#

E_INVALID_USAGE=1
E_TEST_FAILED=2

if [[ -n $1 ]]; then
	inc="$1"
else
	inc="$(cd "$(dirname "${BASH_SOURCE[0]}")/../.." && pwd -P)/src/common/ui_showProgress.bash"
fi

if [[ ! -f $inc ]]; then
	echo "Source file ${inc} does not exist" >&2
	exit $E_INVALID_USAGE
fi

. "$inc"

bin="ui_showProgress"

test_fail()
{
	echo -e "\033[0;31mfailed!\033[0m"
	exit $E_TEST_FAILED
}

assert_succeed()
{
	local descr="$1"
	local msg="$2"
	shift 2
	cmd=("$@")

	echo -n "Testing ${descr}: "
	if "$bin" "$msg" "${cmd[@]}" >/dev/null 2>/dev/null; then
		echo "OK"
	else
		test_fail
	fi
}

assert_fails()
{
	local descr="$1"
	local msg="$2"
	shift 2
	cmd=("$@")

	echo -n "Testing ${descr}: "
	if ! "$bin" "$msg" "${cmd[@]}" >/dev/null 2>/dev/null; then
		echo "OK"
	else
		test_fail
	fi
}

assert_stdout_equals()
{
	local descr="$1"
	local expect="$2"
	local msg="$3"
	shift 3
	local cmd=("$@")
	local buf

	echo -n "Testing ${descr}: "
	if [[ "$("$bin" "$msg" "${cmd[@]}")" == "$(echo -e "$expect")" ]]; then
		echo "OK"
	else
		test_fail
	fi
}

#<assert_fn>         <description> <expectation>                           <message>    <command>
assert_succeed       "success"                                             "Processing" true
assert_fails         "failure"                                             "Processing" false
assert_stdout_equals "success UI"  "Processing...done."                    "Processing" true
assert_stdout_equals "failure UI"  "Processing...\033[0;31mfailed!\033[0m" "Processing" false
assert_stdout_equals "verbosity"   "Processing...done."                    "Processing" echo "Some text that should NOT be printed"

{
	tmpf="$(mktemp)"
	echo "hello, world!" >$tmpf
	echo -n "Testing a compound command: "
	"$bin" "Changing a file" sed -i 's/, / /g;s/!$//' "$tmpf" >/dev/null
	result="$(cat "$tmpf")"
	rm "$tmpf"
	if [[ $result == "hello world" ]]; then
		echo "OK"
	else
		test_fail
	fi
}
