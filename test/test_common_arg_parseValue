#!/bin/bash

#
# Copyright Â© 2013 Max Ruman
#
# This file is part of Wok.
#
# Wok is free software: you can redistribute it and/or modify it under
# the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
#
# Wok is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
# License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with Wok. If not, see <http://www.gnu.org/licenses/>.
#

E_INVALID_USAGE=1
E_TEST_FAILED=2

if [[ -n $1 ]]; then
	inc="$1"
else
	inc="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd -P)/src/common/arg_parseValue.bash"
fi

if [[ ! -f $inc ]]; then
	echo "Source file ${inc} does not exist" >&2
	exit $E_INVALID_USAGE
fi

. "$inc"

bin="arg_parseValue"

test_fail()
{
	echo -e "\033[0;31mfailed!\033[0m"
	exit $E_TEST_FAILED
}

assert_fails()
{
	local descr="$1"
	local arg="$2"

	echo -n "Testing ${descr}: "
	if ! "$bin" "$arg" >/dev/null 2>/dev/null; then
		echo "OK"
	else
		test_fail
	fi
}

assert_stdout_equals()
{
	local descr="$1"
	local expect="$2"
	local arg="$3"
	local out

	echo -n "Testing ${descr}: "
	if out="$("$bin" "$arg")" && [[ $out == "$(echo -e "$expect")" ]]; then
		echo "OK"
	else
		test_fail
	fi
}

#<assert_fn>         <description>    <expectation>          <argument>
assert_stdout_equals "long  opt #1"   "john"                 "--name=john"
assert_stdout_equals "long  opt #2"   "John \"Unknown\" Doe" "--name=John \"Unknown\" Doe"
assert_stdout_equals "long  opt #3"   "John \"Unknown\" Doe" "--3My-Name_is=John \"Unknown\" Doe"
assert_stdout_equals "short opt #1"   "john"                 "-njohn"
assert_stdout_equals "short opt #2"   "John \"Unknown\" Doe" "-nJohn \"Unknown\" Doe"
assert_stdout_equals "short opt #3"   "John \"Unknown\" Doe" "-NJohn \"Unknown\" Doe"
assert_stdout_equals "short opt #4"   "John \"Unknown\" Doe" "-9John \"Unknown\" Doe"
assert_stdout_equals "empty long opt" ""                     "--nice="

assert_fails "no value #1" "hello"
assert_fails "no value #2" "--tesla"
assert_fails "no value #3" "-n"
assert_fails "no value #4" "hello=world"
