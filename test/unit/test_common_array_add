#!/bin/bash

#
# Copyright Â© 2013 Max Ruman
#
# This file is part of Wok.
#
# Wok is free software: you can redistribute it and/or modify it under
# the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
#
# Wok is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
# License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with Wok. If not, see <http://www.gnu.org/licenses/>.
#

E_INVALID_USAGE=1
E_TEST_FAILED=2

if [[ -n $1 ]]; then
	inc="$1"
else
	inc="$(cd "$(dirname "${BASH_SOURCE[0]}")/../.." && pwd -P)/src/common/array.bash"
fi

if [[ ! -f $inc ]]; then
	echo "Source file ${inc} does not exist" >&2
	exit $E_INVALID_USAGE
fi

. "$inc"

bin="array_add"

test_descr()
{
	local descr="$1"

	echo -n "Testing ${descr}..."
}

test_fail()
{
	echo -e "\033[0;31mfailed!\033[0m"
	exit $E_TEST_FAILED
}

test_succeed()
{
	echo "OK"
}

test_qexec()
{
	"$bin" "$@" >/dev/null 2>/dev/null
}

{
	list=("hello world" "john is here" "adriatic")
	test_descr "one-word element addition"
	test_qexec list "baboo" || test_fail
	[[ ${#list[@]} -ne 4 ]] && test_fail
	[[ ${list[3]} != "baboo" ]] && test_fail
	test_succeed
}

{
	list=("hello world" "john is here" "adriatic")
	test_descr "multi-word element addition"
	test_qexec list "my tailor is rich" || test_fail
	[[ ${#list[@]} -ne 4 ]] && test_fail
	[[ ${list[3]} != "my tailor is rich" ]] && test_fail
	test_succeed
}

{
	list=("hello world" "john is here" "adriatic")
	test_descr "foostring element addition"
	test_qexec list '$list [@$$echo] \\nister' || test_fail
	[[ ${#list[@]} -ne 4 ]] && test_fail
	[[ ${list[3]} != '$list [@$$echo] \\nister' ]] && test_fail
	test_succeed
}

{
	test_descr "list creation"
	test_qexec newList "what a" || test_fail
	test_qexec newList "beautiful world" || test_fail
	[[ ${#newList[@]} -ne 2 ]] && test_fail
	[[ ${newList[0]} != "what a" ]] && test_fail
	[[ ${newList[1]} != "beautiful world" ]] && test_fail
	test_succeed
}

{
	test_descr "addition of an existing element"
	list=("hello world" "john is here" "adriatic")
	test_qexec list "adriatic" && test_fail || test_succeed
}
